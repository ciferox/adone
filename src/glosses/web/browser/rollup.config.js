const {
    rollup: { plugin }
} = adone;

export default [
    {
        input: "src/glosses/web/browser/core/index.js",
        output: [
            {
                file: "lib/glosses/web/browser/core.mjs",
                format: "esm",
                paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
            },
            {
                file: "lib/glosses/web/browser/core.js",
                format: "cjs",
                paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
            }
        ],
        external: (id) => id.startsWith("adoneweb/"),
        plugins: [{
            generateBundle(options, bundle) {
                const mod = bundle["core.mjs"];
                if (mod) {
                    adone.fs.writeFileSync("src/glosses/web/compiler/compile/internal_exports.ts", `// This file is automatically generated\nexport default new Set(${JSON.stringify(mod.exports)});`);
                }
            }
        }]
    },
    {
        input: "src/glosses/web/browser/store/index.ts",
        output: [
            {
                file: "lib/glosses/web/browser/store.mjs",
                format: "esm",
                paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
            },
            {
                file: "lib/glosses/web/browser/store.js",
                format: "cjs",
                paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
            }
        ],
        plugins: [
            plugin.typescript({
                include: "src/glosses/web/browser/store/**",
                exclude: "src/glosses/web/browser/core/**"
            })
        ],
        external: (id) => id.startsWith("adoneweb/")
    },
    {
        input: "src/glosses/web/browser/motion/index.js",
        output: [
            {
                file: "lib/glosses/web/browser/motion.mjs",
                format: "esm",
                paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
            },
            {
                file: "lib/glosses/web/browser/motion.js",
                format: "cjs",
                paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
            }
        ],
        external: (id) => id.startsWith("adoneweb/")
    },
    ...["index", "easing", "transition", "animate"].map((name) => ({
        input: `src/glosses/web/browser/${name}.mjs`,
        output: {
            file: `lib/glosses/web/browser/${name}.js`,
            format: "cjs",
            paths: (id) => id.startsWith("adoneweb/") && id.replace("adoneweb", ".")
        },
        external: (id) => id !== `${name}.mjs`
    })) 
];
